[versions]

agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-lifecycle = "2.8.4"
android-googleid = "1.1.1"
androidx-activity = "1.10.1"
compose = "1.8.2"
kotlin = "2.2.0"
kotlinx-coroutines = "1.10.2"
ktor = "3.0.3"
logback = "1.5.8"
composeIcons = "1.1.1"
koin = "4.0.4"
coil = "3.0.0-rc01"
buildConfig = "5.5.1"
secure-random = "0.3.2"
android-security-crypto = "1.0.0"
datastore = "1.1.4"
androix-credentials = "1.5.0"
room = "2.7.0-rc03"
ksp = "2.2.0-2.0.2"
sqlite = "2.5.0-rc03"
navigation-compose = "2.9.0-alpha15"
play-services-auth = "21.3.0"
koog = "0.3.0"
rich-editor = "1.0.0-rc13"
compose-webview = "2.0.1"
kotlinx-datetime = "0.7.1"

[bundles]

shared = []

common = [
    "kotlinx-coroutines-core",
    "kotlinx-datetime",
    "ktor-serialization-kotlinx-json",
]

frontend = [
    "compose-webview",
    "compose-rich-editor",
    "androidx-navigation-compose",
    "coil",
    "coil-network-ktor",
    "composeIcons-featherIcons",
    "koin-compose",
    "koin-compose-viewmodel",
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-json",
    "ktor-client-serialization",
    "ktor-client-content-negotiation",
    "secure-random",
    "datastore",
    "datastore-preferences",
    "room-runtime",
    "sqlite-bundled",
]

server = [
    "koog-agent",
    "logback",
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-content-negotiation",
    "ktor-server-auth-jwt",
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "kotlin-test-junit",
]

android = [
    "androidx-activity-compose",
    "androidx-lifecycle-viewmodel",
    "androidx-lifecycle-runtime-compose",
    "ktor-client-android",
    "koin-android",
    "koin-androidx-compose",
    "kotlinx-coroutines-android",
    "android-security-crypto",
    "android-credentials",
    "android-googleid",
    "android-auth",
    "androidx-activity-ktx",
    "kotlinx-coroutines-play-services"
]

ios = ["ktor-client-darwin"]
desktop = ["ktor-client-cio", "kotlinx-coroutines-swing", "ktor-server-netty"]

[libraries]
# Common
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
## Google auth android
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx-coroutines" }
android-credentials = { module = "androidx.credentials:credentials", version.ref = "androix-credentials" }
android-googleid = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "android-googleid" }
android-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "play-services-auth" }
## Ktor
# Server
koog-agent= { module = "ai.koog:koog-agents", version.ref = "koog" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" } # todo used?
# Front
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-json = { group = "io.ktor", name = "ktor-client-json", version.ref = "ktor" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
coil = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
compose-rich-editor = { module = "com.mohamedrejeb.richeditor:richeditor-compose", version.ref = "rich-editor" }
compose-webview = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "compose-webview" }
# Navigation
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
# Android
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
# IOS
ktor-client-darwin = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
# Desktop, server
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
## Settings
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" } # Front
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" } # Front
secure-random = { module = "org.kotlincrypto:secure-random", version.ref = "secure-random" } # Front
android-security-crypto = { module = "androidx.security:security-crypto", version.ref = "android-security-crypto" } # Android
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" } # Server
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" } # Server
# Android
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
# Desktop
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
# Room
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

[plugins]
# server
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
# Shared
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
# server & Frontend
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
# common
androidLibrary = { id = "com.android.library", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
# frontend & common
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }